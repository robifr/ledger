name: build

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_call:

jobs:
  code-style:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-cleanup: 'always'
          validate-wrappers: true

      - name: Ensure gradlew is executable
        run: chmod +x ./gradlew

      - name: Check Spotless
        run: ./gradlew spotlessCheck

  jvm-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-cleanup: 'always'
          validate-wrappers: true

      - name: Ensure gradlew is executable
        run: chmod +x ./gradlew

      - name: Run test
        run: ./gradlew testDebugUnitTest --rerun-tasks

      - name: Generate coverage report with Jacoco
        run: ./gradlew jacocoDebugUnitTestReport --stacktrace

      - name: Upload unit test coverage data
        uses: actions/upload-artifact@v4
        with:
          name: 'unit-test-coverage'
          path: app/build/outputs/unit_test_code_coverage/debugUnitTest/**/*.exec

  android-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [30, 35]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-cleanup: 'always'
          validate-wrappers: true

      - name: Ensure gradlew is executable
        run: chmod +x ./gradlew

      - name: Enable KVM for hardware acceleration
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: 'x86_64'
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest

      - name: Generate coverage report with Jacoco
        run: ./gradlew jacocoDebugAndroidTestReport --stacktrace

      - name: Upload Android instrumental test coverage data
        uses: actions/upload-artifact@v4
        with:
          name: 'android-test-coverage-${{ matrix.api-level }}'
          path: app/build/outputs/code_coverage/debugAndroidTest/**/*.ec

  coverage:
    runs-on: ubuntu-latest
    needs: [jvm-test, android-test]
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-cleanup: 'always'
          validate-wrappers: true

      - name: Ensure gradlew is executable
        run: chmod +x ./gradlew

      - name: Assemble debug to generate classes
        run: ./gradlew assembleDebug

      - name: Download unit test coverage data
        uses: actions/download-artifact@v4
        with:
          name: 'unit-test-coverage'
          path: app/build/outputs/unit_test_code_coverage/debugUnitTest/

      - name: Download Android instrumental test coverage data
        uses: actions/download-artifact@v4
        with:
          # Only download coverage for the latest APi level.
          name: 'android-test-coverage-35'
          path: app/build/outputs/code_coverage/debugAndroidTest/

      - name: Merge multiple coverage report with Jacoco
        run: ./gradlew jacocoMergeDebugReport --stacktrace

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: app/build/reports/jacoco/jacocoMergeDebugReport/jacocoMergeDebugReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}